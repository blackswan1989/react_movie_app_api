{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","href","targe","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8XA2CeA,MAtCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OAEE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CAAET,KAAIC,OAAMC,QAAOC,UAASC,SAAQC,YAG7C,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,WC4CKC,G,kNA7DbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,kEAaVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASb,UAAU,aACjB,wBAAIA,UAAU,aAAd,mBACA,wBAAIA,UAAU,iBACZ,uBACEqB,KAAK,uDACLC,MAAM,UAFR,mBAODV,EACC,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZa,EAAOP,KAAI,SAACiB,GAEX,OACE,kBAAC,EAAD,CACEd,IAAKc,EAAM7B,GACXA,GAAI6B,EAAM7B,GACVC,KAAM4B,EAAM5B,KACZC,MAAO2B,EAAM3B,MACbC,QAAS0B,EAAM1B,QACfC,OAAQyB,EAAMC,mBACdzB,OAAQwB,EAAMxB,kB,GAnDb0B,IAAMC,Y,MCQVC,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAK5B,UAAU,oBACb,kGAC8D,6BAD9D,+CAIA,gECWS+B,E,kLAnBO,MAEYX,KAAKQ,MAA3BI,EAFU,EAEVA,SAAUC,EAFA,EAEAA,aAEKC,IAAnBF,EAAS7B,OACX8B,EAAQE,KAAK,O,+BAIP,IACAH,EAAaZ,KAAKQ,MAAlBI,SACR,OAAIA,EAAS7B,MACJ,0BAAMH,UAAU,UAAUgC,EAAS7B,MAAMN,SAEzC,S,GAfQ4B,IAAMC,W,MCYZU,MAVf,WAEE,OACE,yBAAKpC,UAAU,OACb,kBAAC,IAAD,CAAMC,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,U,MCaSoC,MAdf,WAIE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW7B,IACxC,kBAAC,IAAD,CAAO2B,KAAK,SAASE,UAAWb,IAChC,kBAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,MCZ1CU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.53f1a8c6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    //자바스크립트에서 작성한것이기 때문에 class -> className 으로 써줘야 오류가 없다.\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${id}`,\n          state: { id, year, title, summary, poster, genres },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 150)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\n//Movie.propTypes 대소문자 오타주의 Movie.PropTypes로 작성시 오류 발생\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","//TODO #6 ROUTING BONUS\n//https://yts-proxy.now.sh/list_movies.json (http://yts.lt)\u001c\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        <h1 className=\"sideTitle\">React Movie API</h1>\n        <h1 className=\"sideTitle-git\">\n          <a\n            href=\"https://github.com/blackswan1989/react_movie_app_api\"\n            targe=\"_blank\"\n          >\n            @blackswan1989\n          </a>\n        </h1>\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              //console.log(movie);\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props) {\n  console.log(props);\n  return (\n    <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. <br />\n        If that is granted, all else follows.”\n      </span>\n      <span>− George Orwell, 1984 -</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    //console.log(props);\n    const { location, history } = this.props;\n    //console.log(location.state);\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return <span className=\"detail\">{location.state.summary}</span>;\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  // a href를 사용해서 네비게이션을 사용하면 리엑트가 새로고침 될 뿐이다. 따라서 import { Link } from \"react-router-dom\"을 작성해준 후 -> Link to를 사용해준다.\n  return (\n    <div className=\"nav\">\n      <Link to=\"/about\">About</Link>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  //url을 이용해서 path를 지정해 줄 수 있다.\n  //exact={true}는 url이 겹치지 않게 url이 \"/\"일때만 home렌더링을 해준다.\n  //Navigation은 HashRouter안에서만 사용해주어야 Link to가 정상적으로 작동된다.\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//component : html을 반환하는 함수\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n//<App/>하나만 선택할수있으며 App안에 많은 component를 넣을 수 있고, 그 component안에 더 많은 component를 import할 수 있다.\n\n/*\nIf you want your app to work offline and load faster, you can change\nunregister() to register() below. Note this comes with some pitfalls.\nLearn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();*/\n"],"sourceRoot":""}